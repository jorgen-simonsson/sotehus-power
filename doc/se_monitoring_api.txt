Last update: August 2022 



 
SolarEdge API 

 

SolarEdge API 
Contents 
SolarEdge API .......................................................................................................................................................................................2 

Contents ...........................................................................................................................................................................................2 

General.................................................................................................................................................................................................4 

Purpose and scope ...........................................................................................................................................................................4 

Acronyms and abbreviations ...........................................................................................................................................................4 

Revision History ...............................................................................................................................................................................4 

Introduction .........................................................................................................................................................................................4 

Technical Information ......................................................................................................................................................................5 

API Access ........................................................................................................................................................................................5 

Language and Time Encoding ..........................................................................................................................................................6 

Request Format ................................................................................................................................................................................6 

Response Formats ............................................................................................................................................................................6 

JSONP Support .................................................................................................................................................................................6 

Error Handling ..................................................................................................................................................................................7 

Usage Limitations .............................................................................................................................................................................7 

Specific API Usage Limitations .....................................................................................................................................................7 

Daily Limitation ............................................................................................................................................................................7 

Concurrency Limitation ................................................................................................................................................................7 

Bulk Use .......................................................................................................................................................................................7 

API Description .....................................................................................................................................................................................8 

Site Data API .....................................................................................................................................................................................8 

Site List .........................................................................................................................................................................................8 

Site Details .................................................................................................................................................................................11 

Site Data: Start and End Dates ...................................................................................................................................................12 

Site Data: Bulk Version ...............................................................................................................................................................13 

Site Energy .................................................................................................................................................................................13 

Site Energy: Bulk Version ...........................................................................................................................................................14 

Site Energy – Time Period ..........................................................................................................................................................15 

Site Energy – Time Period: Bulk Version ....................................................................................................................................16 

Site Power ..................................................................................................................................................................................16 

Site Power: Bulk version ............................................................................................................................................................18 

Site Overview .............................................................................................................................................................................19 

Site Overview: Bulk Version ......................................................................................................................................................20 

Site Power - Detailed..................................................................................................................................................................21 

Site Energy - Detailed .................................................................................................................................................................23 

 2 



 
SolarEdge API 

Site Power Flow..........................................................................................................................................................................24 

Storage Information ...................................................................................................................................................................26 

Site Image ..................................................................................................................................................................................28 

Site Environmental Benefits .......................................................................................................................................................29 

Installer Logo Image ...................................................................................................................................................................30 

Site Equipment API.........................................................................................................................................................................31 

Components List ........................................................................................................................................................................31 

Inventory ....................................................................................................................................................................................32 

Inverter Technical Data ..............................................................................................................................................................35 

Equipment Change Log ..............................................................................................................................................................39 

Account List API .............................................................................................................................................................................39 

Meters API .....................................................................................................................................................................................43 

Get Meters Data .........................................................................................................................................................................43 

Sensors API .....................................................................................................................................................................................49 

Get Sensor List ...........................................................................................................................................................................49 

Get Sensor Data .........................................................................................................................................................................50 

API Versions ...................................................................................................................................................................................52 

Current Version ..........................................................................................................................................................................52 

Supported Version .....................................................................................................................................................................52 

Data Types .........................................................................................................................................................................................53 

Time Unit ........................................................................................................................................................................................53 

Site Status ......................................................................................................................................................................................53 

Site Type .........................................................................................................................................................................................53 

 3 



 
General 

General 
Purpose and scope 
The purpose of this document is to outline the Application Programming Interface (API) available via SolarEdge Cloud-Based 
Monitoring Platform. 
The web services allow access to data saved in the monitoring server while keeping the data secured for authorized users. 
This document provides information about the technical features of the API, and describes each API with its parameters formats 
and other details. 

 
Acronyms and abbreviations 
The following table lists acronyms used in this document 

Abbreviation Meaning 
API Application Programming Interface 
WS Web Services 
REST Representational State Transfer 
CSV Comma Separated Values 
JSON JavaScript Object Notation 
XML Extensible Mark-up Language 

 
Revision History 

 August 2022 – updated documentation of the Inverter Technical Data endpoint 

 January 2019 – 
• Addition of Meters API 
• Updated Storage Information API and Inverter Technical Data API 

 February 2018 - addition of disable/enable site access by associated account 
 September 2017 – various parameter updates 
 June 2016 - addition of StorEdge profiles API 
 April 2016- addition of status filter for alerts API 

Introduction 
The SolarEdge API allows other software applications to access its monitoring system database for data analysis purposes, fleet 
management, displaying system data in other applications, etc. 
The following is a list of available APIs: 

 
API Name API Output 

Site List A list of sites for a given account, with the information on each site. This list allows convenient 
search, sort and pagination 

Site Details Details of a chosen site 
Site Data: Start and End Dates The site energy production start and end dates 
Site Energy Site energy measurements 
Site Energy – Time Period Site energy for a requested timeframe 
Site Power Site power measurements in a 15-minute resolution 
Site Overview Site current power, energy production (today, this month, lifetime) and lifetime revenue 

Site Power Detailed site power measurements including meters such as consumption, export (feed-in), 
import (purchase), etc. 

Site Energy Detailed site energy measurements including meters such as consumption, export (feed-in), 
import (purchase), etc. 

 4 



 
Introduction 

 

API Name API Output 
Site Power Flow Get the power flowchart of the site 

Storage Get detailed storage information from batteries including the state of energy, power and lifetime 
energy 

Site Image The site image as uploaded to the server, either scaled or original size 
Site Environmental Benefits Summary of site’s positive impact on the environment 
Installer Logo Image The installer logo image as uploaded to the server. 
Components List List of inverters with name, model, manufacturer, serial number and status 

Inventory Information about the SolarEdge equipment, including: inverters/SMIs, batteries, meters, 
gateways and sensors 

Inverter Technical Data Technical data on the inverter performance for a requested period of time 
Equipment Change Log List of replacements for a given component 
Account List API The account details and list of all sub-accounts 
Get Sensor List The list of sensors installed in the site 
Get Sensor Data The measurements of the sensors installed in the site 

Get Meters Data Information about each meter in the site including: lifetime energy, metadata and the device to 
which it’s connected to. 

API Versions The current and supported version numbers 

An API key must be used in order to submit API requests. 
Account users should generate an Account Level API Key, and system owners should generate a Site level API Key. 
The API link is https://monitoringapi.solaredge.com 
Please review the API terms and conditions at this link: https://monitoring.solaredge.com/solaredge-web/p/license 
Display requirements: 
When displaying information from the API, place the SolarEdge logo where it is clear to the user that the information source is 
SolarEdge’s monitoring system. 
The logo should link to http://solaredge.com 
For any assistance with display, send an email to support@solaredge.com 

 
Technical Information 
The SolarEdge API is built as RESTful service: 
• It uses predictable, resource oriented URLs 
• It has built-in HTTP capabilities for passing parameters via the API 
• It responds with standard HTTP codes 
• It can return results in XML, JSON (including JSONP support) or CSV format. 

 
API Access 
 The API can be accessed via HTTPS protocol only. SolarEdge monitoring server supports both HTTPS/1.0 and HTTPS/1.1 

protocols. 
 All APIs are secured via an access token: every access to the API requires a valid token as a URL parameter named api_key. 

For example: api_key= L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
 An API key can be generated to enable access to specific sites (via Site API key) or to all sites within a specific account (via 

Account API key). 
 

► To generate an account users API key: 
In the Account Admin > Company Details tab > API Access section: 

 5 



 
Introduction 

1 Acknowledge reading and agreeing to the SolarEdge API Terms & Conditions. 
2 Click Generate API key. 
3 Copy the key. 
4 Click Save. 
5 Use the key in all API requests 

► To generate a Site API key: 
In the Site Admin > Site Access tab > Access Control tab > API Access section: 
1 Acknowledge reading and agreeing to the SolarEdge API Terms & Conditions. 
2 Click Generate API key. 
3 Copy the key. 
4 Click Save. 
5 Use the key in all API requests 

 
Security Guidelines 
To help keep your data secure from unauthorized access, make sure to adhere to the following guidelines: 

 Don’t share your API key. Remember, gaining access to an API key is equivalent to obtaining a user’s login credentials. 

• Never store your API key in publicly accessible locations, including shared documents, code repositories (such as GitHub) 
and shared network drives. 

• Avoid sharing your API keys with third parties whenever possible. If you’re using a third party service that asks you for your 
SolarEdge Monitoring API key, it is your responsibility to ensure the provider stores and handles your API key in a secure 
manner. 

• Do not make API requests directly from browser applications (JavaScript code). If you store your API key in your publicly 
accessible JavaScript code, it can be easily copied by anyone visiting your site. API requests should only be made from a 
secure backend server. 

 Use Site API keys whenever possible, particularly if you’re allowing a third-party application or service to access the API on 
your behalf. 

 Rotate your API keys periodically. SolarEdge recommends updating your API keys every 6 months. To generate a new API key: 

• Account Key –  

1. Navigate to the Account Admin > Company Details tab > API Access section 

2. Uncheck the checkbox under “API Access” 

3. Check the checkbox again – a new key will be generated 

4. Click Save 

• Site Key –  

1. Navigate to the Site Admin > Site Access tab > Access Control tab > API Access section 

2. Click New Key 

3. Click Save  
 
Language and Time Encoding 

 When using special characters or spaces in URL, they must be url encoded. 
 The monitoring server data can be in different languages therefore data is retrieved using UTF-8. 
 Date and time formats in all APIs are: 

• Date and time: YYYY-MM-DD hh:mm:ss 

 6 



 
Introduction 

• Date only: YYYY-MM-DD 
 Dates are always in the time zone of the site. 
 All physical measures are in the metric units system. 
 Temperature values are always in Celsius degrees. 

Request Format 
The request format and parameters are specified per each API, and conform to the HTTP and REST standards. 
Parameter order in the request is not significant. 

Response Formats 
The user can request data in the following formats: 

• JSON (application/json) 
• XML(application/xml) 
• CSV (text/csv). 

See specific APIs in the next sections for supported format in each API. 
If a specific format is not requested, the data will be retrieved via JSON. If the requested format is invalid, the system will 
generate HTTP error "Media not supported". 
The API user can request the response format in one of the methods below. The system handles the response format as follows: 

• URL format Parameter – …&format=application/json 
• Path extension – the name of the API will be followed by the requested format 

name ../details.json&… 
• HTTP header – based on ‘Accept’ header e.g. Accept application/json 

 
JSONP Support 
The API supports JSONP calls by appending a callback parameter with the name of a callback method at the end of the request. 
As JSONP content type is application/javascript, make sure the client sends this content type in the Accept header, otherwise 
HTTP 406 error may occur. 

 7 



 
Introduction 

The following example shows a JSON call VS. JSONP call: 

 JSON: 
• Request: 

http://monitoringapi.solaredge.com/1/details.json?api_key=[your_api_key] 

• Response body: 
{"details":{..}} 

 JSONP: 
• Request: 

http://monitoringapi.solaredge.com/1/details.json?api_key=[your_api_key]&callback=myFunction 

• Response body: 
myFunction({"details":{..}}); 
 
Error Handling 
The API system uses standard HTTP error codes for reporting errors that occurred while calling the API. The monitoring server 
API supports standard HTTP error codes, for example: if the user access is of an unknown resource, an HTTP 404 error will be 
returned. 

 
Usage Limitations 
Usage limitations are enforced to prevent abuse of the monitoring server API, and these limitations may be changed in the 
future without notice. Additionally, a request rate limit is applied to prevent abuse of the service. If you exceed the limitations, 
an error message appears in the monitoring server API. If the limitation is further exceeded, the system may temporarily be 
nonoperational, or your access to the monitoring server API may be blocked. 

 
Specific API Usage Limitations 
Specific APIs may enforce different usage limitations based on parameters sent by the client. Refer to the next sections for 
details on specific API usage limitations. 
If there is a violation of a specific API validation, the HTTP 403 – forbidden status code is returned. 

 
Daily Limitation 
Use of the monitoring server API is subject to a query limit of 300 requests for a specific account token and a parallel query limit 
of 300 requests for each specific site ID from the same source IP. 
APIs that do not have a specific ID (e.g. Site List, Account List) will be counted as part of the account query limit. 
Any additional site or account level request will result in HTTP 429 error – too many requests. 

Concurrency Limitation 
The monitoring server API allows up to 3 concurrent API calls from the same source IP. Any additional concurrent calls will return 
HTTP 429 error – too many requests. 
To execute APIs concurrently without exceeding the above limitation, it is the client responsibility to implement a throttling 
mechanism on the client side. 

 

Bulk Use 
Some of the APIs offer a bulk form, that is, they take multiple site IDs as an input. The list is separated by a comma and should 
contain up to 100 site IDs. 
A bulk call for multiple sites consumes 1 call from the daily quota allowed for each of the sites included in the call. 

 8 



 
API Description 

API Description 
Site Data API 

Site List 
Description: Returns a list of sites related to the given token, which is the account api_key. This API accepts parameters for 
convenient search, sort and pagination. 
URL: /sites/list 
Example URL (with all options): 
https://monitoringapi.solaredge.com/sites/list?size=5&searchText=Lyon&sortProperty=name&sortOrder=ASC&api_key=L4QLV 
Q1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Formats: JSON, XML and CSV 

 Request: The following are parameters to include in the request. 
 

Parameter Type Mandatory Default Value Description 
    The maximum number of sites returned by this call. The 
    maximum number of sites that can be returned by this 

size Integer No 100 call is 100. If you have more than 100 sites, just request 
another 100 sites with startIndex=100.This will fetch sites 
100-199. 

startIndex Integer No 0 The first site index to be returned in the results 
    Search text for this site. Searchable site properties: 
    Name 
    Notes 
    Address 

searchText String No 
 City 
 Zip code 
 Full address 
 Country 

    A sorting option for this site list, based on one of its 
   properties. 
   Available sort properties: 
    Name – sort by site name 
    Country – sort by site country 
    State – sort by site state 
    City – sort by site city 

sortProperty String No  Address – sort by site address 
 Zip – sort by site zip code 
 Status – sort by site status 
 PeakPower – sort by peak power 
 InstallationDate – sort by installation date 
 Amount – sort by amount of alerts 
 MaxSeverity – sort by alert severity 
 CreationTime – sort by site creation time 

sortOrder String No ASC Sort order for the sort property. Allowed values are 
ASC (ascending) and DESC (descending). 

    Select the sites to be included in the list by their status: 
     Active 
     Pending 

Status String No Active,Pending 
 Disabled 
 All 
Default list will include Active and Pending sites. 

 9 



 
API Description 

 
 Response: The returned data is the site list, including the sites that match the given search criteria. For each entry, the 

following information is displayed: 
• id - the site ID 
• name - the site name 
• account id -the account this site belongs to 
• status - the site status (see Site Status on page 53) 
• peak power - site peak power 
• CURRENCY 

• installationDate – site installation date (format: yyyy-MM-DD hh:mm:ss ) 
• ptoDate – permission to operate date 
• notes 
• type – site type (see Site Type on page 53) 
• location - includes country, state, city, address, secondary address, time zone and zip 
• alertQuantity - number of open alerts in this site * 
• alertSeverity - the highest alert severity in this site * 
• publicSettings - includes if this site is public and its public name 
• * Alert information is only available when using an API_KEY generated by an account. API_KEY 

generated at the site level does not return this information. 
• 
• 
 Example: JSON output: 

{ 
 
"Sites":{ 

 
"count":1567, 

 
"list":[{ 

 
"id":1, 

 
"name":"Test", 

"accountId":0, 

"status":"Active", 

"peakPower":10.0, 

"currency":"EUR", 

"installationDate":"2012-06-08 00:00:00", 
 

“ptoDate”: “2017-05-11”, 
 

"notes":"test notes", 

"type":"Optimizers & Inverters", 

"location":{ 

"country":"the country", 

"state":"the state", 

"city":"the city", 

"address":"the address", 

"address2":"the address2", 

"zip":"00000", 

"timeZone":"GMT" 

 10 



 
API Description 

 
}, 

 
"alertQuantity":0, 

"alertSeverity":"NONE", 

"uris":{ 

"PUBLIC_URL":"the public URL name", 

"IMAGE_URI":"the site image link" 

}, 
 

"publicSettings":{ 

"name":"the public name", 

"isPublic":true 

} 
 

}, 
 

{ 
 

"id":2, 
 

"name":"Test", 

"accountId":0, 

"status":"Active", 

"peakPower":10.0, 

"currency":"EUR", 

"installationDate":"2012-06-08 00:00:00", 
 

“ptoDate”: “2017-05-11”, 
 

"notes":"test notes", 

"type":"Optimizers & Inverters", 

"location":{ 

"country":"the country", 

"state":"the state", 

"city":"the city", 

"address":"the address", 

"address2":"the address2", 

"zip":"00000", 

"timeZone":"GMT" 
 

}, 
 

"alertQuantity":0, 

"alertSeverity":"NONE", 

"uris":{ 

"PUBLIC_URL":"the public URL name", 

"IMAGE_URI":"the site image link" 

}, 
 

"publicSettings":{ 

"name":"the public name", 

"isPublic":true 

 11 



 
API Description 

 
} 

 
}] 

 
} 

 
} 

 
 
}}}]}} 

 
Site Details 
Description: Displays the site details, such as name, location, status, etc. 
URL: /site/{siteId}/details 
Example URL: https://monitoringapi.solaredge.com/site/1/details?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON and XML 

 Request: The following parameter is included in the request: 
 Parameter Type Mandatory description 

siteId Integer Yes The site identifier 

 Re sponse: The returned data includes the following site information: 
• id – the site ID 
• name – the site name 
• account id – the account this site belongs to 
• status – the site status (see Site Status on page 53) 
• peak power – site peak power 
• currency 
• installationDate – site installation date (format: yyyy-MM-DD hh:mm:ss ) 
• ptoDate – permission to operate date 
• notes 
• type – site type (see Site Type on page 53) 
• location - includes country, state, city, address, secondary address, zip and time zone 
• alertQuantity - number of open alerts in this site * 
• alertSeverity – the highest alert severity in this site * 
• publicSettings - includes if this site is public (isPublic) and its public name (name) 
• * Alert information is only available when using an API_KEY generated by an account. API_KEY 

generated at the site level does not return this information. 
• 
 Example: JSON output: 

{ 
 

"details":{ 
 

"id":0, 
 

"name":"site name", 

"accountId":0, 

"status":"Active", 

"peakPower":9.8, 
 

"currency":"EUR", 

"installationDate":"2012-08-16 00:00:00", 

“ptoDate”: “2017-05-11”, 

 12 



 
API Description 

 
"notes":"my notes", 

"type":"Optimizers & Inverters", 

"location":{ 

"country":"my country", 

"state":"my state", 

"city":"my city", 

"address":"my address", 

"address2":"", 

"zip":"0000", 
 

"timeZone":"GMT" 
 

}, 
 

"alertQuantity":0, 

"alertSeverity":"NONE", 

"uris":{ 

"IMAGE_URI":"site image uri" 
 

}, 
 

"publicSettings":{ 

"name":null, 

"isPublic":false 

} 
 

} 
 
} 

 

Site Data: Start and End Dates 
Description: Return the energy production start and end dates of the site. 
URL: /site/{siteId}/dataPeriod 
Example URL: https://monitoringapi.solaredge.com/site/1/dataPeriod?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON and XML 

 Request: The following parameter is included in the request: 
 Parameter Type Mandatory description 
 siteId Integer Yes The site identifier 
 Re sponse: The returned data includes <start, end> dates of the requested site. In case this site is not transmitting, the 

response is “null”. 
 Example: JSON output example: 

{ 
 

"dataPeriod":{ 
 

"startDate":"2013-05-05 12:00:00", 
 

"endDate":"2013-05-28 23:59:59" 
 

} 
 
} 

For non-transmitting sites: 
{ 

 13 



 
API Description 

 
"dataPeriod":{ 

"startDate":null, 

"endDate":null 

} 
 
} 

 

Site Data: Bulk Version 
Description: This section describes the use of the above API for a bulk call. 
URL: /sites/{siteId 1},{siteId 2},…,{siteId n}/dataPeriod 
Example URL: https://monitoringapi.solaredge.com/sites/1,4/dataPeriod?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 

 Response: The response includes a list of <start, end> data transmission dates for the requested sites. 
The value “null” will be displayed for sites that have no data (not transmitting). 
Note that if the list contains site IDs for which the user has no permission to view, the system will generate a 403 
Forbidden error with a proper description. 
 Example: JSON format example: 
 In this response, the sample site 4 is not transmitting. 

{ 
"dataPeriod": { 

"count": 2, 
"list": [{ 

"id": 1, 
"startDate": "2013-05-05 12:00:00", 
"endDate": "2013-05-28 23:59:59" 

}, 
{ 

"id": 4, 
"startDate": null, 
"endDate": null 

}] 
} 

} 
 
 

Site Energy 
Description: Return the site energy measurements. 
Note: this API returns the same energy measurements that appear in the Site Dashboard.  
URL: /site/{siteId}/ energy 
Example URL: https://monitoringapi.solaredge.com/site/1/energy?timeUnit=DAY&endDate=2013-05-30&startDate=2013-05- 
01&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML and CSV 

 Usage limitation: This API is limited to one year when using timeUnit=DAY (i.e., daily resolution) and to one month when 
using timeUnit=QUARTER_OF_AN_HOUR or timeUnit=HOUR. This means that the period between endTime and startTime 
should not exceed one year or one month respectively. If the period is longer, the system will generate error 403 with 
proper description. 
 Request: The following are parameters to include in the request: 

Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 
startDate String Yes The start date to return energy measurement 
endDate String Yes The end date return energy measurement 
timeUnit String  Aggregation granularity, see Time Unit on page 53. 

Default : DAY. 
Allowed values are: QUARTER_OF_AN_HOUR, 
HOUR, DAY, WEEK, MONTH, YEAR 

 

 14 



 
API Description 

 Response: The response includes the requested time unit, the units of measurement (e.g. Wh), and the pairs of date and 
energy for every date ({"date":"2013-06-01 00:00:00","value":null}). 
The date is calculated based on the time zone of the site. “null” means there is no data for that time. 
 Example: JSON output: 

{ 
 

"energy":{ 
 

"timeUnit":"DAY", 
 

"unit":"Wh", 
 

"values":[{ 
 

"date":"2013-06-01 00:00:00", 
 

"value":null 
 

}, 
 

{ 
 

"date":"2013-06-02 00:00:00", 
 

"value":null 
 

}, 
 

{ 
 

"date":"2013-06-03 00:00:00", 
 

"value":null 
 

}, 
 

{ 
 

"date":"2013-06-04 00:00:00", 
 

"value":67313.24 
 

}] 
 

} 
 
} 

 

Site Energy: Bulk Version 
Description: This section describes the use of that the above API for a bulk call. 
URL: /sites/{siteId 1},{siteId 2},…,{siteId n}/ energy 
Example URL: https://monitoringapi.solaredge.com/sites/1,4/energy? timeUnit=DAY&startDate=2013-05-01&endDate=2013-05- 
30&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
 Response: The response includes the requested time unit, the units of measurement (e.g. Wh), and the list of sites. For each 

site there is a list of items whichinclude a time stamp and the energy produced in that period. Example: ({"date":"2013-06- 
01 00:00:00","value":1500.12}). 
The date is calculated based on the time zone of every site; if there is no value for the selected time, “null” will be displayed 
for the value. 
Note that if the list contains site IDs for which the user has no permission to view, the system will generate a 403 
Forbidden error with a proper description. 
 Example: JSON format example: 

{ 
"energy": { 

"timeUnit": "DAY", 
"unit": "Wh", 
"count": 2, 
"list": [{ 

"id": 1, 
"values": [{ 

 15 



 
API Description 

"date": "2013-06-01 00:00:00", 
"value": null 

}, 
{ 

"date": "2013-06-02 00:00:00", 
"value": null 

}, 
{ 

"date": "2013-06-03 00:00:00", 
"value": null 

}, 
{ 

"date": "2013-06-04 00:00:00", 
"value": 67313.24 

}] 
}, 
{ 

"id": 4, 
"values": [{ 

"date": "2013-06-01 00:00:00", 
"value": null 

}, 
{ 

"date": "2013-06-02 00:00:00", 
"value": null 

}, 
{ 

"date": "2013-06-03 00:00:00", 
"value": null 

}, 
{ 

"date": "2013-06-04 00:00:00", 
"value": 67313.24 

}] 
}] 

} 
} 

 

Site Energy – Time Period 
Description: Return the site total energy produced for a given period. 
Note: This API only returns on-grid energy for the requested period. In sites with storage/backup, this may mean that results can 
differ from what appears in the Site Dashboard. Use the regular Site Energy API to obtain results that match the Site Dashboard 
calculation.  
URL: /site/{siteId}/timeFrameEnergy 
Example URL: https://monitoringapi.solaredge.com/site/1/timeFrameEnergy?startDate=2013-05-01&endDate=2013-05- 
06&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON and XML 

 Usage limitation: This API is limited to one year when using timeUnit=DAY (i.e., daily resolution). This means that the period 
between endTime and startTime should not exceed one year). If the period is longer, the system will generate error 403 
with proper description 
 Request: The following are parameters to include in the request: 

 Parameter Type Mandatory Description 

 siteId Integer Yes The site identifier 
startDate String Yes The start date to calculate energy generation 

 endDate String Yes The end date to calculate energy generation 
 Re sponse: The response includes the energy summary for the given time period with units of measurement (e.g. Wh) 

The date is calculated based on the time zone where the site is located. 
 Example: JSON output: 

{ 
 

"timeFrameEnergy":{ 

"energy":761985.8, 

"unit":"Wh" 

} 
 16 



 
API Description 

 
} 

 17 



 
API Description 

Site Energy – Time Period: Bulk Version 
Description: This section describes the use of that the above API for a bulk call. 
URL: /sites/{siteId 1},{siteId 2},…,{siteId n}/timeFrameEnergy 
Example URL: https://monitoringapi.solaredge.com/sites/1,4/energy?timeFrameEnergy?startDate=2013-05-01&endDate=2013- 
05-06&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 

 Response: The response includes the units of measurement (e.g. Wh), and the list of sites that include energy summary for 
the given time period. 
The date is calculated based on the time zone of every site; if no data exists for the requested period, “null” will be 
displayed for the value field. 
Note that if the list contains site IDs for which the user has no permission to view, the system will generate a 403 
Forbidden error with a proper description. 
 Example: JSON format example: 

{ 
{ 
"timeFrameEnergy": { 

"unit": "Wh", 
"count": 4, 
"list": [{ 

"id": 1, 
"energy": 761985.8 

}, 
{ 

"id": 4, 
"energy": 234284.4 

}, 
{ 

"id": 534, 
"energy": null 

}, 
{ 

"id": 222, 
"energy": 9984724.5 

}] 
} 

} 
 
 
 

Site Power 
Description: Return the site power measurements in 15 minutes resolution. 
URL: /site/{siteId}/ power 
Example URL: https://monitoringapi.solaredge.com/site/1/power?startTime=2013-05-5%2011:00:00&endTime=2013-05- 
05%2013:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML and CSV 

 
 
 Usage limitation: This API is limited to one-month period. This means that the period between endTime and startTime 

should not exceed one month. If the period is longer, the system will generate error 403 with proper description. 
 Request: The following are parameters to include in the request: 

 
Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 
startTime String Yes The start (date + time) to get power measurements. 
endTime String Yes The end (date + time) to get power measurements 

 Response: The response includes the time unit (i.e. QUARTER_OF_AN_HOUR), the measurement units (e.g. Watt) and the 
pairs of date and power (in Watts) for every date ({"date":"2013-06-04 14:00:00","value":7722.3896}) 

 18 



 
API Description 

The date is calculated in ticks starting 1-1-1970 and presented based on the time zone of the site. “null” means there is no 
data for that time. 
 Example: JSON output: 

{ 
 

"power":{ 
 

"timeUnit":"QUARTER_OF_AN_HOUR", 

"unit":"W", 

"values":[{ 
 

"date":"2013-06-04 11:00:00", 
 

"value":7987.03 
 

}, 
 

{ 
 

"date":"2013-06-04 11:15:00", 
 

"value":9710.121 
 

}, 
 

{ 
 

"date":"2013-06-04 11:30:00", 
 

"value":8803.309 
 

}, 
 

{ 
 

"date":"2013-06-04 11:45:00", 
 

"value":9000.743 
 

}, 
 

{ 
 

"date":"2013-06-04 12:00:00", 

"value":6492.2075 

}, 
 

{ 
 

"date":"2013-06-04 12:15:00", 
 

"value":7395.716 
 

}, 
 

{ 
 

"date":"2013-06-04 12:30:00", 
 

"value":8855.878 
 

}, 
 

{ 
 

"date":"2013-06-04 12:45:00", 

"value":6551.6655 

}, 
 

{ 
 

"date":"2013-06-04 13:00:00", 
 

"value":8114.938 

 19 



 
API Description 

 
}, 

 
{ 

 
"date":"2013-06-04 13:15:00", 

 
"value":7466.171 

 
}, 

 
{ 

 
"date":"2013-06-04 13:30:00", 

 
"value":6595.561 

 
}, 

 
{ 

 
"date":"2013-06-04 13:45:00", 

 
"value":8824.195 

 
}, 

 
{ 

 
"date":"2013-06-04 14:00:00", 

"value":7722.3896 

}] 
 

} 
 
} 

 
 

Site Power: Bulk version 
Description: This section describes the use of that the above API for a bulk call. 
URL: /sites/{siteId 1},{siteId 2},…,{siteId n}/power 
Example URL: https://monitoringapi.solaredge.com/sites/1,4/power?startTime=2013-06-04 11:00:00&endTime=2013-06-04 
14:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 

 Response: The response includes the resolution of time measurements (e.g. QUARTER_OF_AN_HOUR), units of 
measurement (e.g. W), and the list of sites that include date and power in the given resolution. 
The date is calculated in ticks starting 1-1-1970 and presented based on the time zone of the site. If no data exists for the 
requested period, “null” will be displayed for the value field. 
Note that if the list contains site IDs for which the user has no permission to view, the system will generate a 403 
Forbidden error with a proper description. 
 Example: JSON format example: 

{ 
"power": { 

"timeUnit": "QUARTER_OF_AN_HOUR", 
"unit": "W", 
"count": 2, 
"list": [{ 

"id": 1, 
"values": [{ 

"date": "2013-06-04 11:00:00", 
"value": 7987.03 

}, 
{ 

"date": "2013-06-04 11:15:00", 
"value": 9710.121 

}, 
{ 

"date": "2013-06-04 11:30:00", 
"value": 8803.309 

}, 
{ 

 20 



 
API Description 

"date": "2013-06-04 11:45:00", 
"value": 9000.743 

}, 
{ 

"date": "2013-06-04 12:00:00", 
"value": 6492.207 

}] 
}, 
{ 

"id": 4, 
"values": [{ 

"date": "2013-06-04 11:00:00", 
"value": 7987.03 

}, 
{ 

"date": "2013-06-04 11:15:00", 
"value": 9710.121 

}, 
{ 

"date": "2013-06-04 11:30:00", 
"value": 8803.309 

}, 
{ 

"date": "2013-06-04 11:45:00", 
"value": 9000.743 

}, 
{ 

"date": "2013-06-04 12:00:00", 
"value": 6492.2075 

}] 
}] 

} 
} 

 

Site Overview 
Description: Display the site overview data. 
URL: /site/{siteId}/ overview 
Example URL: https://monitoringapi.solaredge.com/ site/{siteId}/overview?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON and XML 

 
 

 Request: The following parameter is included in the request: 
 

Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 

 Response: The response includes the site current power, daily energy, monthly energy, yearly energy and life time energy. 
 Example: JSON output: 

{ 
 

"overview":{ 
 

"lastUpdateTime":"2013-10-01 02:37:47", 

"lifeTimeData":{ 

"energy":761985.75, 

"revenue":946.13104 

}, 
 

"lastYearData":{ 

"energy":761985.8, 

"revenue":0.0 

}, 

 21 



 
API Description 

 
"lastMonthData":{ 

"energy":492736.7, 

"revenue":0.0 

}, 
 

"lastDayData":{ 

"energy":0.0, 

"revenue":0.0 
 

}, 
 

"currentPower":{ 

"power":0.0 

} 
 

} 
 
} 

 

Site Overview: Bulk Version 
Description: This section describes the use of that the above API for a bulk call. 
URL: /sites/{siteId 1},{siteId 2},…,{siteId n}/overview 
Example URL: https://monitoringapi.solaredge.com/sites/1,4/overview&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 

 Response: The response includes the last update time, current power, and daily, monthly, yearly and life time energy and 
revenue measurements for each of the sites in the list 
Note that if the list contains site IDs for which the user has no permission to view, the system will generate a 403 
Forbidden error with a proper description. 
 Example: JSON format example: 

{ 
"overview": { 

"count": 2, 
"list": [{ 

"id": 1, 
"lastUpdateTime": "2013-10-01 02:37:47", 
"lifeTimeData": { 

"energy": 761985.75, 
"revenue": 946.13104 

}, 
"lastYearData": { 

"energy": 761985.8, 
"revenue": 0.0 

}, 
"lastMonthData": { 

"energy": 492736.7, 
"revenue": 0.0 

}, 
"lastDayData": { 

"energy": 0.0, 
"revenue": 0.0 

}, 
"currentPower": { 

"power": 0.0 
} 

}, 
{ 

"id": 4, 
"lastUpdateTime": "2013-10-01 02:37:47", 
"lifeTimeData": { 

"energy": 761985.75, 
"revenue": 946.13104 

}, 
"lastYearData": { 

"energy": 761985.8, 
"revenue": 0.0 

}, 
"lastMonthData": { 

"energy": 492736.7, 

 22 



 
API Description 

"revenue": 0.0 
}, 
"lastDayData": { 

"energy": 0.0, 
"revenue": 0.0 

}, 
"currentPower": { 

"power": 0.0 
} 

}] 
} 

} 
 

Site Power - Detailed 
Description: Detailed site power measurements from meters such as consumption, export (feed-in), import (purchase), etc. 
Note: Calculated meter readings (also referred to as "virtual meters"), such as self-consumption, are calculated using the data 
measured by the meter and the inverters. 
URL: /site/{siteId}/powerDetails 
Method: GET 
Accepted response formats: JSON (default), XML 

 Usage limitation: This API is limited to one-month period. This means that the period between endTime and startTime 
should not exceed one month. If the period is longer, the system will generate error 403 with proper description. 
 Parameters 

 Parameter Type Mandatory Description 
siteId number Yes The site identifier 

 startTime String Yes The power measured start time in yyyy-MM-DD hh:mm:ss format 
 endTime String Yes The power measured end time in yyyy-MM-DD hh:mm:ss format 
 meters String No Select specific meters only. If this value is omitted, all meter readings are 

returned. 
 Value shall include entries from the following list separated by comma: 
  Production- AC production power meter / inverter production AC power 

(fallback) 
  Consumption - Consumption meter 

  SelfConsumption - virtual self-consumption (calculated) 
 FeedIn - Export to GRID meter 

  Purchased - Import power from GRID meter 

 Exa mple URL: 
https://monitoringapi.solaredge.com/site/1/powerDetails?meters=PRODUCTION,CONSUMPTION&startTime=2015-11- 
21%2011:00:00&endTime=2015-11-22%2013:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
 Response: The response provides 15 minute resolution data series for each of the requested meters. 

The response includes the following: 
powerDetails - Root element 
• timeUnit - The time unit of the data (i.e. QUARTER_OF_AN_HOUR) 
• unit - Power measurement units (e.g. Watt) 
• meters - List of meters. For each meter: 
• type - The meter type (Production/Consumption/SelfConsumption/FeedIn (export)/Purchased 

(import)) 
• values - Pairs of date and power for every date 

({"date":"2013-06-04 14:00:00" , "value":7722.3896}) 
For dates in which no data exists the value will be committed 

 Sample response: A sample response for a call such as: 
https://monitoringapi.solaredge.com/site/1/powerDetails?startTime=2015-11-21%2011:00:00&endTime=2015-11- 
21%2011:30:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
{ 

"powerDetails": { 
"timeUnit": "QUARTER_OF_AN_HOUR", 
"unit": "W", 

 23 



 
API Description 

"meters": [ 
{ 

"type": "Consumption", 
"values": [ 

{ 
"date": "2015-11-21 11:00:00", 
"value": 619.8288 

}, 
{ 

"date": "2015-11-21 11:15:00", 
"value": 474.87576 

}, 
{ 

"date": "2015-11-21 11:30:00", 
"value": 404.7733 

} 
] 

}, 
{ 

"type": "Purchased", 
"values": [ 

{ 
"date": "2015-11-21 11:00:00", 
"value": 619.8288 

}, 
{ 

"date": "2015-11-21 11:15:00", 
"value": 474.87576 

}, 
{ 

"date": "2015-11-21 11:30:00", 
"value": 404.7733 

} 
] 

}, 
{ 

"type": "Production", 
"values": [ 

{ 
"date": "2015-11-21 11:00:00", 
"value": 0 

}, 
{ 

"date": "2015-11-21 11:15:00", 
"value": 0 

}, 
{ 

"date": "2015-11-21 11:30:00", 
"value": 0 

} 
] 

}, 
{ 

"type": "SelfConsumption", 
"values": [ 

{ 
"date": "2015-11-21 11:00:00", 
"value": 0 

}, 
{ 

"date": "2015-11-21 11:15:00", 
"value": 0 

}, 
{ 

"date": "2015-11-21 11:30:00", 
"value": 0 

} 
] 

}, 
{ 

"type": "FeedIn", 
"values": [ 

{ 
"date": "2015-11-21 11:00:00", 
"value": 0 

}, 
{ 

"date": "2015-11-21 11:15:00", 
"value": 0 

}, 
{ 

 24 



 
API Description 

"date": "2015-11-21 11:30:00", 
"value": 0 

} 
] 

} 
] 

} 
} 

 

Site Energy - Detailed 
Description: Detailed site energy measurements from meters such as consumption, export (feed-in), import (purchase), etc. 
Note: Calculated meter readings (also referred to as "virtual meters"), such as self-consumption, are calculated using the data 
measured by the meter and the inverters. 
URL: /site/{siteId}/energyDetails 
Method: GET 
Accepted response formats: JSON (default), XML 

 Usage limitation: This API is limited to: 
• A year when using daily resolution (timeUnit=DAY) 
• A month when using hourly resolution of higher (timeUnit=QUARTER_OF_AN_HOUR or 

timeUnit=HOUR) 
• Lower resolutions (weekly, monthly, yearly) have no period limitation 
In case the requested resolution is not allowed for the requested period, error 403 with proper description will be returned. 

 Parameters: 
 Parameter Type Mandatory Description 

siteId number Yes The site identifier 
 startTime String Yes The energy measured start time in yyyy-MM-DD hh:mm:ss format 
 endTime String Yes The energy measured end time in yyyy-MM-DD hh:mm:ss format 
 timeUnit String No Aggregation granularity. 

Default : DAY 
 Allowed values are: 
  QUARTER_OF_AN_HOUR 

  HOUR 
 DAY 

  WEEK 

  MONTH 
 YEAR 

 meters String No Select specific meters only. If this value is omitted, all meter readings are returned. 
 Value shall include entries from the following list separated by comma: 

 Production - Production energy meter 
  Consumption - Consumption meter 
  SelfConsumption - Virtual self-consumption (calculated) 

 FeedIn - Export energy to GRID meter 
  Purchased - Import energy from GRID meter 
 Exa mple URL: 

https://monitoringapi.solaredge.com/site/1/energyDetails?meters=PRODUCTION,CONSUMPTION&timeUnit=DAY&startTim 
e=2013-05-15%2011:00:00&endTime=2013-05-25%2013:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
 Response: The response includes the following: 

energyDetails - root element 
• timeUnit - the requested time unit 
• unit - The measurement units (e.g. Wh) 
• meters - List of meters. For each meter: 
• type - The meter type (Production/Consumption/SelfConsumption/FeedIn (export)/Purchased 

(import)) 

 25 



 
API Description 

• values - Pairs of date and power for every date ({"date":"2013-06-04 14:00:00" , 
"value":7722.3896}). 
For dates in which no data exists the value will be committed (see sample) 

 Sample response: A sample response for a call such as: 
https://monitoringapi.solaredge.com/site/1/energyDetails?meters=PRODUCTION,CONSUMPTION&timeUnit=WEEK&startTi 
me=2015-10-21%2011:00:00&endTime=2015-11-21%2011:30:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
{ 

"energyDetails": { 
"timeUnit": "WEEK", 
"unit": "Wh", 
"meters": [ 

{ 
"type": "Production", 
"values": [ 

{ 
"date": "2015-10-19 00:00:00" 

}, 
{ 

"date": "2015-10-26 00:00:00" 
}, 
{ 

"date": "2015-11-02 00:00:00" 
}, 
{ 

"date": "2015-11-09 00:00:00" 
}, 
{ 

"date": "2015-11-16 00:00:00", 
"value": 2953 

} 
] 

}, 
{ 

"type": "Consumption", 
"values": [ 

{ 
"date": "2015-10-19 00:00:00" 

}, 
{ 

"date": "2015-10-26 00:00:00" 
}, 
{ 

"date": "2015-11-02 00:00:00" 
}, 
{ 

"date": "2015-11-09 00:00:00" 
}, 
{ 

"date": "2015-11-16 00:00:00", 
"value": 29885 

} 
] 

} 
] 

} 
} 

 

Site Power Flow 
Description: Retrieves the current power flow between all elements of the site including PV array, storage (battery), loads 
(consumption) and grid. 
Note: Applies when export , import and consumption can be measured. 
URL: /site/{siteId}/currentPowerFlow 
Method: GET 
Accepted response formats: JSON (default), XML 

 Parameters: 

 Parameter Type Mandatory Description 
siteId number Yes The site identifier 

 Exa mple URL: 
https://monitoringapi.solaredge.com/site/1/currentPowerFlow?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 

 26 



 
API Description 

 Response: The response returns power flow for each of the elements in the system and their state. 
In case the site does not support this information, the response should be an empty object. 
Otherwise, the response includes the following: 
• siteCurrentPowerFlow - Root element 
• unit - The measurement units (e.g. Watt) 
• connections - A table including all the relationships between the elements, and the power flow 

directions (producing element and consuming element) 
• from element - The element providing power 
• to element - The element consuming power 
• A list of elements - Element per entity type in the specific site 
• GRID - always included in response 
• LOAD - always included in response 
• PV - included if the site has a PV array (measurement of PV produced power) 
• STORAGE - included if the site has storage installed and enabled 
• Parameters for each element: 

1. For all included elements, the following parameters are provided: 
o status - The current status of the element (Active / Idle 

/ Disabled) 
o currentPower - The current power of the element. All 

numbers are positive; power direction is determined by the 
“connections” section above: 
 For STORAGE - Check the “connection” section for 

the direction. From storage to load = discharge. From 
PV to storage or from load to storage = charge. 

 For GRID - Check the “connection” section for the 
direction. From grid to load = import (purchase), 
from load to grid = export (feed-in). 

2. For Storage, the following additional properties are included: 
o chargeLevel - The accumulated state of energy (% of charge) 

for all batteries 
o critical- If the accumulated storage charge level drops below a 

configurable level (currently 10%), this flag is returned 
o timeLeft - In Backup mode (GRID is Disabled), this property is 

returned to specify the time left before the storage energy 
runs out (estimated according to current load level). 

 Sample response: 
{ 

"siteCurrentPowerFlow": { 
"unit": "W", 
"connections": [ 

{ 
"from": "GRID", 
"to": "Load" 

} 
], 
"GRID": { 

"status": "Active", 
"currentPower": 3435.77978515625 

}, 
"LOAD": { 

"status": "Active", 
"currentPower": 3435.77978515625 

}, 
"PV": { 

"status": "Idle", 
"currentPower": 0 

}, 

 27 



 
API Description 

"STORAGE": { 
"status": "Idle", 
"currentPower": 0, 
"chargeLevel": 27, 
"critical": false 

} 
} 

} 

 
Storage Information 
Description: Get detailed storage information from batteries: the state of energy, power and lifetime energy. 
Note: Applicable to systems with batteries. 
URL: /site/{siteId}/storageData 
Method: GET 
Accepted response formats: JSON (default), XML 

 Usage limitation: This API is limited to one-week period. 
Specifying a period that is longer than 7 days will generate error 403 with proper description. 
 Parameters: 

 Parameter Type Mandatory Description 
siteId number Yes The site identifier 

 startTime String Yes Storage power measured start time in yyyy-MM-DD hh:mm:ss format 
 endTime String Yes Storage power measured end time in yyyy-MM-DD hh:mm:ss format 
 serials Comma No Return data only for specific battery serial numbers; the list is comma 

separated list of separated. 
 Strings If omitted, the response includes all the batteries in the site 
 Sam ple URL: https://monitoringapi.solaredge.com/site/1/storageData?serials=1111,2222&startTime=2015-05- 

22%2011:00:00&endTime=2015-05-25%2013:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
 Response: The response includes the following: 

• storageData- Root element 
• batteryCount -Number of batteries includes in the response 
• batteries - A list of battery objects, each containing the following: 

1. serialNumber - String - The battery serial number 
2. nameplate - number - The nameplate (nominal) capacity of the 

battery 
3. modelNumber – Battery model number 
4. telemetryCount - number - The number of telemetries for this 

battery in the response 
5. telemetries - A list of storage data telemetries. each entry 

contains: 
o timeStamp - String - Telemetry timestamp in the format of 

YYY-MM-DD HH:MM:SS 
o power - number - Positive power indicates the battery is 

charging, negative is discharging. 
o batteryState - number - can be one of the following: 0 

(Invalid), 1 (Standby), 2 (Thermal Mgmt.), 3 (Enabled), 4 
(Fault) 

o lifeTimeEnergyCharged - number - The energy Charged from 
the battery in Wh, during battery lifetime. 

o lifeTimeEnergyDischarged - number - The energy discharged 
from the battery in Wh, during battery lifetime. 

 28 



 
API Description 

o fullPackEnergyAvailable - The maximum energy (Wh) that can 
currently be stored in the battery. Note that the battery state 
of health (SoH) can be calculated from this value. SoH is 
defined as Full Pack Energy available today/Full Pack Energy 
available on day one. Full pack energy available on day one 
can be extracted from the battery nameplate value or battery 
model information. Both the battery name plate value and 
model number are provided by the storageData method. 

o internalTemp - Battery internal temperature in Celsius. 
o ACGridCharging - Amount of AC energy used to charge the 

battery from grid within a specified date range in Wh. 
o stateOfCharge – number (percentage) – the battery state of 

charge as percentage of the available capacity. Values are in 
the range of 0 to 100. 

 Sample response: A sample response for a call such as: 
https://monitoringapi.solaredge.com/site/1/storageData.json?startTime=2015-10-13 07:40:00&endTime=2015-10-13 
11:40:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 

{ 
 

"storageData": { 

"batteryCount": 1, 

"batteries": [ 

{ 
 

"nameplate": 1, 

"serialNumber": "BFA", 

"modelNumber": "LGXXXXX-XXX", "telemetryCount": 9, 

"telemetries": [ 

{ 
 

"timeStamp": "2015-10-13 08:00:00", 
 

"power": 12, 
 

"batteryState": 3, 
 

"lifeTimeEnergyCharged": 6 
 

"lifeTimeEnergyDischarged": 6, 
 

“fullPackEnergyAvailable”: 8950, 
 

“internalTemp”: 38, 
 

“ACGridCharging”: 234 
 

}, 
 

{ 
 

"timeStamp": "2015-10-13 08:05:00", 
 

"power": 12, 
 

"batteryState": 3, 
 

"lifeTimeEnergyCharged": 6, 
 

"lifeTimeEnergyDischarged": 6, 
 

“fullPackEnergyAvailable”: 8950, 
 

“internalTemp”: 38, 

 29 



 
API Description 

 
“ACGridCharging”: 234 

 
}, 

 
{ 

 
"timeStamp": "2015-10-13 08:10:00", 

 
"power": 12, 

 
"batteryState": 3, 

 
"lifeTimeEnergyCharged": 6, 

 
"lifeTimeEnergyDischarged": 6, 

 
“fullPackEnergyAvailable”: 8950, 

 
“internalTemp”: 38, 

 
“ACGridCharging”: 234 

 
}, 

 
{ 

 
"timeStamp": "2015-10-13 08:15:00", 

 
"power": 12, 

 
"batteryState": 3, 

 
"lifeTimeEnergyCharged": 6, 

 
"lifeTimeEnergyDischarged": 6, 

 
“fullPackEnergyAvailable”: 8950, 

 
“internalTemp”: 38, 

 
“ACGridCharging”: 234 

 
} 

 
] 

 
} 

 
] 

 
} 

 
} 

Disclaimers: 
1. As LG battery does not provide lifetime charge/discharge data, the monitoring system aggregates the delta 

charge/discharge values. In cases where telemetries containing delta energy values are lost or not sent, the calculated 
lifetime energy values will be incomplete. Values provided are not revenue grade. 

2. AC coupling is not supported with 3rd party inverters. 
 
 
Site Image 
Description: Display the site image as uploaded by the user. 
URL: /site/{siteId}/siteImage/{name} 
Example URL: 
https://monitoringapi.solaredge.com/site/1/siteImage/myname.jpg?hash=123456789&api_key=L4QLVQ1LOKCQX2193VSEICXW 
61NP6B1O 
Method: GET 

 30 



 
API Description 

 Performance: The image element returns with a hash element, which is consistent as long as the image is not changed. 
When executing the Site Image API while using the hash element, the server matches the image hash and the hash sent in 
the URL. If a match is found, the API returns an HTTP 304 code. In case the image hash that appears in the URL is different 
than the one stored in the server, the image will be downloaded. 
When using the maxWidth and MaxHeight parameters, the hash element will be ignored. 
 Image sizes: By default, the API returns the same image that was uploaded to the monitoring portal. If an image in a 

different scale is required, the API supports it via the maxWidth and maxHeight parameters. The system will scale the 
image while keeping the aspect ratio of the original image, so the returned image will be smaller. 
 Request: The following are parameters to include in the request: 

 
Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 
name String No It is recommended to enter the site image name so 

the user can save the new image based on the 
name in the URL. 

maxWidth Integer No The maximum width to scale this image 
maxHeight Integer No The maximum height to scale this image 
hash Integer No The image hash 

 Response: The response includes one of the following: 
• The requested image 
• Error 404 – not found, if the site has no image 
• Error 304 – unmodified, if a hash attribute was specified 

 
Site Environmental Benefits 
Description: Returns all environmental benefits based on site energy production: CO2 emissions saved, equivalent trees planted, 
and light bulbs powered for a day. 
URL: /site/{siteId}/envBenefits 
Example: https://monitoringapi.solaredge.com/site/2/envBenefits?systemUnits=Imperial&api_key 
=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 

Accepted formats: JSON 
 
 

 Request: The following parameters are included in the request: 
 
 Parameter Type Mandatory Description 

siteId Integer Yes The site identifier 
 systemUnits String No The system units used when returning gas emission 
 savings. 
 Valid Values: Metrics, Imperial – note systemUnits are 

case sensitive. 
 If systemUnits are not specified, the logged in user system 

units are used. 

 Re sponse: Returns the list of environmental benefits associated with the site energy production: 
• gasEmissionSaved: quantity of CO2 emissions that would have been generated by an equivalent 

fossil fuel system 
• treesPlanted: equivalent planting of new trees for reducing CO2 levels 
• lightBulbs: number of light bulbs that could have been powered by the site for a day 

 31 



 
API Description 

 Sample response: 
 

For Imperial: 
{ 

"envBenefits": { 
"gasEmissionSaved": { 

"units": "Lb", 
"co2": 1486.63, 
"so2": 1926.55, 

"nox": 614.37 
}, 
"treesPlanted": 2.2555082200000003, 
"lightBulbs": 5217.4604 

} 
} 

 
 

For Metrics: 
{ 

"envBenefits": { 
"gasEmissionSaved": { 

"units": "Kg", 
"co2": 674.93066, 
"so2": 874.65515, 

"nox": 278.92545 
}, 
"treesPlanted": 2.2555082200000003, 
"lightBulbs": 5217.4604 

} 
} 

 
 

Installer Logo Image 
Description: Return the site installer logo image as uploaded by the user. If such an image does not exist, the account installer 
logo is returned. 
URL: /site/{siteId}/installerImage/{name} 
Example URL: 
https://monitoringapi.solaredge.com/site/1/installerImage/myname.jpg?hash=123456789&api_key=L4QLVQ1LOKCQX2193VSEI 
CXW61NP6B1O 
Method: GET 

 Request: The following are parameters to include in the request: 
 

Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 

 32 



 
API Description 

 

name String No It is recommended to enter the site image name so 
the user can save the new image based on the 
name in the URL. 

 Response: The response includes the requested image. 

Site Equipment API 

Components List 
Description: Return a list of inverters/SMIs in the specific site. 
URL: /equipment/{siteId}/list 
Example URL (with all options): 
https://monitoringapi.solaredge.com/equipment/2/list?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML and CSV 

 Request: The following parameter is included in the request: 
 

Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 

 Response: The response includes a list of inverters/SMIs with their name, model, manufacturer and serial number. 
• name – the inverter/SMI name 
• manufacturer – the equipment manufacturer e.g. SolarEdge 
• model – the inverter/SMI model e.g. SE16K 
• serialNumber – the equipment short serial number 
 Example: JSON output: 

{ 
 

"list":[{ 
 

"name":"Inverter 1", 

"manufacturer":"SolarEdge", 

"model":"SE16K", 

"serialNumber":"12345678-00" 

}, 
 

{ 
 

"name":"Inverter 1", 

"manufacturer":"SolarEdge", 

"model":"SE16K", 

"serialNumber":"12345678-00" 

}, 
 

{ 
 

"name":"Inverter 1", 

"manufacturer":"SolarEdge", 

"model":"SE16K", 

"serialNumber":"12345678-00" 

}, 
 

{ 

 33 



 
API Description 

 
"name":"Inverter 1", 

"manufacturer":"SolarEdge", 

"model":"SE16K", 

"serialNumber":"12345678-65" 

}] 
 
} 

 
 

Inventory 
Description: Return the inventory of SolarEdge equipment in the site, including inverters/SMIs, batteries, meters, gateways and 
sensors. 
URL: /site/{siteId}/inventory 
Example URL (with all options): 
https://monitoringapi.solaredge.com/site/2/inventory?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML 

 Request: The following parameter is included in the request: 
 

Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 

 Response: The response includes a list equipment installed on site: 
• Inverters – SolarEdge inverters 

1. name – the inverter name e.g. Inverter 1 
2. manufacturer – manufacturer name (SolarEdge) 
3. model name e.g. SE16K 
4. CPU Firmware version e.g. 2.52.311 
5. DSP 1 Firmware version 
6. DSP 2 Firmware version 
7. communicationMethod – the communication interface used to 

connect to server. E.g. Ethernet. 
8. serialNumber – the equipment serial number e.g. 7F123456-00 
9. connectedOptimizers – number of optimizers connected to the 

inverter 
• thirdPartyInverters – 3rd party inverters 

1. name – the inverter name, e.g.: Inverter 1 
2. manufacturer – manufacturer name 
3. model name 
4. SN – serial number 

• smiList – List of SMI devices 
• name – the inverter name e.g. Inverter 1 

1. manufacturer – manufacturer name (SolarEdge) 
2. model name e.g. SE16K 
3. Firmware version e.g. 2.52.311 
4. communicationMethod – the communication interface used to 

connect to server. e.g.: Ethernet. 
5. serialNumber – the equipment serial number e.g.: 7F123456-00 

 34 



 
API Description 

  connectedOptimizers – number of optimizers connected to the 

 inverter 

• Meters  
 name – the inverter name e.g. “Feed In Meter” 
 Manufacturer – e.g. “WattNode” 
 Model – meter model number 
 SN – serial number (if applicable) 
 Type – meter type, e.g. “Production” 
 FirmwareVersion (if applicable) 
 ConnectedTo – Name of SolarEdge device the meter is connected 

to 
 connectedSolaredgeDeviceSN – serial number of the inverter / 

gateway the meter is connected to 
 form – physical for a HW meter or virtual if calculated by 

arithmetic between other meters 
• Sensors – Irradiance / wind / temperature sensors 

1. connectedSolaredgeDeviceSN – the S/N of the device it is 
connected to e.g. 12345678-00 

2. Id – e.g. “SensorDirectIrradiance” 
3. connectedTo – name of the device it is connected to e.g. 

“Gateway 1” 
4. Categoty – e.g. IRRADIANCE 
5. Type – e.g. “Plane of array irradiance” 

• Gateways:  
  name – the inverter name e.g. Inverter 1 
  serialNumber – the equipment serial number e.g. 7F123456-00 
  Firmware version 

• Batteries  
  Name 
  Serial Number 
  Manufacturer - the battery manufacturer name 
  Model - the battery model name 
  Nameplate capacity - the nameplate capacity of the battery as 
 provided by the manufacturer 
  Firmware version 
  ConnectedTo – Name of SolarEdge device the battery is connected 
 to 
  connectedSolaredgeDeviceSN – serial number of the inverter / 
 gateway the battery is connected to 

• 

 Example: JSON output: 
{ 

 
"Inventory":{ 

 
"meters":[ 

 
{ 

"name":"Production Meter", 

"manufacturer":"WattNode", 

 35 



 
API Description 

  
 "model":"WNC-3Y-480-MB", 
  

 "firmwareVersion":"0013", 

 "connectedSolaredgeDeviceSN":"12345678-00", 
 
 "type":"Production", 
 
 "form":"physical" 

}], 

 
"sensors":[ 

 
{ 

  
 "connectedSolaredgeDeviceSN":"12345678-00", 
 
 "id":"SensorDirectIrradiance", 

 "connectedTo":"Gateway 1", 
 
 "category":"IRRADIANCE", 
 
 "type":"Direct irradiance" 

 
},  

  
{ 

  
 "connectedSolaredgeDeviceSN":"12345678-00", 
 
 "id":"SensorPlaneOfArrayIrradiance", 

 "connectedTo":"Gateway 1", 
 
 "category":"IRRADIANCE", 
 
 "type":"Plane of array irradiance" 

}], 

 
"gateways":[ 

 
{ 

  
 "name":"Gateway 1", 
 
 "firmwareVersion":"2.956.0", 

 "SN":"12345678-00" 
 

}], 

 
"batteries":[ 

 
{ 

  
 "name":"Battery 1.1", 
 
 "manufacturer":"NAME", 

 "model":"10KWh", 
 
 "firmwareVersion":"2.0", 
 
 "connectedInverterSn":"12345678-01", 
 
 "nameplateCapacity":6400.0, 

 "SN":"T123456789" 
 

}], 

 
"inverters":[ 

 

 36 



 
API Description 

{ 
 

"name":"Inverter 1", 

"manufacturer":"SolarEdge", 

 37 



 
API Description 

 
"model":"SE20K", 

"firmwareVersion":"2.19.233", 

"SN":"12345678-01", 

"connectedOptimizers":76 
 

}, 
 

{ 
 

"name":"Inverter 2", 

"manufacturer":"SolarEdge", 

"model":"SE20K", 

"firmwareVersion":"2.19.233", 

"SN":"12345678-02", 

"connectedOptimizers":76 
 

} 
 

}] 
 

} 
 
} 

 

Inverter Technical Data 
Description: Return specific inverter data for a given timeframe. 
URL: /equipment/{siteId} /{serialNumber}/data 
Example URL (with all options): https://monitoringapi.solaredge.com/equipment/2 /12345678-90/data?startTime=2013-05- 
5%2011:00:00&endTime=2013-05-05%2013:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML and CSV 

 Usage limitation: This API is limited to one-week period. This means that the period between endTime and startTime should 
not exceed one week). If the period is longer, the system will generate error 403 with proper description. 
 Request: The following are parameters to include in the request: 

 
Parameter Type Mandatory Description 
siteId Integer Yes The site identifier 
serialNumber String Yes The inverter short serial number 
startTime String Yes The start (date + time) to get inverter data 
endTime String Yes The end (date + time) to get inverter data 

 Response: The response includes technical parameters as for the inverter’s performance (e.g., voltage, current, active 
power etc.), inverter type (1ph or 3ph), and software version. If an attribute is not supported based on the inverter version 
or type it will be omitted from the response. 

Original name Comment Data divided per phase 
timestamp  no 
AC current  yes 
AC voltage  yes 
AC frequency  yes 
QRef  yes 
CosPhi  yes 
Total Active Power  no 
apparentPower Supported starting communication yes 

board version 2.474 

 38 



 
API Description 

 

Original name Comment Data divided per phase 
activePower Supported starting communication yes 

board version 2.474 
reactivePower Supported starting communication yes 

board version 2.474 
DC voltage  no 
groundFaultResistance  no 
powerLimit %  no 
Lifetime energy Supported starting communication no 

board version 2.474 
totalEnergy  no 
temperature Celsius no 
inverterMode OFF – Off no 

SLEEPING – night mode 
STARTING – pre-production 
MPPT – production 
THROTTLED – Forced 
power reduction 
SHUTTING_DOWN – Shutdown 
procedure 
 FAULT – error mode 
STANDBY – maintenance 
LOCKED_STDBY – standby mode 
lock 
LOCKED_FIRE_FIGHTERS – fire- 
fighters lock mode 
LOCKED_FORCE_SHUTDOWN – 
forced shutdown from server 
LOCKED_COMM_TIMEOUT – 
communication timeout 
LOCKED_INV_TRIP – inverter self- 
lock trip 
LOCKED_INV_ARC_DETECTED – 
inverter self-lock on arc detection 
LOCKED_DG – inverter lock due to 
DG mode enable 
LOCKED_PHASE_BALANCER – 
inverter lock due to phase 
imbalance (1ph, Australia only) 
LOCKED_PRE_COMMISSIONING 
– inverter lock due to pre-
commissioning 
LOCKED_INTERNAL – inverter 
lock due to an undisclosed internal 
reason 

operationMode 0 – On-grid no 
1 – Operating in off-grid mode using 
PV or battery 
2 - Operating in off-grid mode with 
generator (e.g. diesel) is present 

apparentPower VA yes 
activePower VA yes 
reactivePower VAR yes 
cosPhi  yes 
vL1ToN  1ph only 
vL2ToN  1ph only 
vL1To2  3ph only 
vL2To3  3ph only 
vL3To1  3ph only 

 39 



 
API Description 

 
 

 Example: 
{ 

 
"data":{ 

 
"count":2, 

 
"telemetries":[{ 

 40 



 
API Description 

 
“threePhaseInverterTelemetry”:[{ 

 
"date":"2013-06-04 11:00:00", 

 
"totalActivePower":null, 

"dcVoltage":46.9757, 

“groundFaultResistance”:6672.34, 

“powerLimit”:78.4159, 

“totalEnergy”:1.26533E7, 

“temperature”:54.8134, 

“inverterMode”:MPPT, 

“operationMode”:0 

"L1Data":{ 
 

"acCurrent":22.653, 

"acVoltage":11.6201, 

"acFrequency":41.3468, 

“apparentPower”:1964.0, 

“activePower”:1954.0, 

“reactivePower”:-89.0, 

“cosPhi”:1.0 

} 

“vL1To2”:394.312, 

“vL2To3”:393.781, 

“vL3To1”:392.5, 

"L2Data":{ 
 

"acCurrent":22.653, 

"acVoltage":11.6201, 

"acFrequency":41.3468, 

“apparentPower”:1964.0, 

“activePower”:1954.0, 

“reactivePower”:-89.0, 

“cosPhi”:1.0 

} 

"L3Data":{ 

"acCurrent":22.653, 

"acVoltage":11.6201, 

"acFrequency":41.3468, 

“apparentPower”:1964.0, 

“activePower”:1954.0, 

“reactivePower”:-89.0, 

“cosPhi”:1.0 

} 
 

}], 

 41 



 
API Description 

 
“threePhaseInverterTelemetry”:[{ 

 
"date":"2013-06-04 11:05:00", 

 
"totalActivePower":null, 

"dcVoltage":46.9757, 

“groundFaultResistance”:6672.34, 

“powerLimit”:78.4159, 

“totalEnergy”:1.26533E7, 

“temperature”:54.8134, 

“inverterMode”:MPPT, 

“operationMode”:0 

"L1Data":{ 
 

"acCurrent":22.653, 

"acVoltage":11.6201, 

"acFrequency":41.3468, 

“apparentPower”:1964.0, 

“activePower”:1954.0, 

“reactivePower”:-89.0, 

“cosPhi”:1.0 

} 

“vL1To2”:394.312, 

“vL2To3”:393.781, 

“vL3To1”:392.5, 

"L2Data":{ 
 

"acCurrent":22.653, 

"acVoltage":11.6201, 

"acFrequency":41.3468, 

“apparentPower”:1964.0, 

“activePower”:1954.0, 

“reactivePower”:-89.0, 

“cosPhi”:1.0 

} 

"L3Data":{ 

"acCurrent":22.653, 

"acVoltage":11.6201, 

"acFrequency":41.3468, 

“apparentPower”:1964.0, 

“activePower”:1954.0, 

“reactivePower”:-89.0, 

“cosPhi”:1.0 

} 
 

}], 

 42 



 
API Description 

 
}] 

 
} 

 
} 

 

Equipment Change Log 
Description: Returns a list of equipment component replacements ordered by date. This method is applicable to inverters, 
optimizers, batteries and gateways. 
URL: /equipment/{siteId}/{serialNumber}/changeLog 
Example URL (with all options): 
https://monitoringapi.solaredge.com/equipment/2/1234567-38/changeLog?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML and CSV 

 Request: The following parameter is included in the request: 
 

Parameter Type Mandatory Description 
siteId Integer Yes Site identifier 
serialNumber String Yes Inverter, battery, optimizer or gateway short 

serial number 

 Response: The response includes a list of replacements by the specified equipment component, ordered-by date. The list 
contains the component serial number, model and date of replacement. 
• count – number of replacements of specified component 
• list – list of replacements where each replacement contains: 
• serialNumber – equipment short serial number 
• partNumber – inverter/battery/optimizer/gateway model 
• date – date of replacement of that equipment component 
 Example: JSON output: 

{ 
"ChangeLog": { 

"count": 1, 
"list": { 

"serialNumber": "1234567-3A", 
"partNumber": null, 
"date": "2017-08-30" 

} 
} 

} 
 

Account List API 
Description: Return the account and list of sub-accounts related to the given token. This API accepts parameters for convenient 
search, sorting and pagination. 
URL: /accounts/list 
Example URL (with all options): 
https://monitoringapi.solaredge.com/accounts/list?size=5&searchText=someText&sortProperty=name&sortOrder=ASC&api_ke 
y=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML and CSV 

 Request: The following are parameters to include in the request: 

 43 



 
API Description 

 

Parameter Type Mandatory Default Description 
Value 

size Integer No 100 The maximum number of accounts returned by this call. If 
you have more than 100 sites, just request another 100 
sites with startIndex=100. This will fetch sites 100-199. 

startIndex Integer No 0 The first account index to be returned in the results 
searchText String No  Search text for this account. Searchable properties: 

 Name – the account name 
 Notes 
 Email – contact person email 
 Country 
 State 
 City 
 Zip 
 Full address 

sortProperty String No  A sorting option for this account list, based on one of its 
properties. 
Available sort properties: 
 Name – sort by account name 
 country – sort by account country 
 city – sort by account city 
 address – sort by account address 
 zip – sort by account zip code 
 fax – sort by account fax number 
 phone – sort by account phone 
 notes – sort by account notes 

sortOrder String No ASC Sort order for the sort property. Allowed values are ASC 
(ascending) and DESC (descending). 

 Response: The returned data is the account data, including sub-accounts. For each entry, the following information is 
displayed: 
 id – account ID 
 name – account name 
 location – includes country, state, city, address, address2 (secondary address), zip 
 companyWebSite – the company web site 
 contactPerson – the account contact person first name and surname 
 email – the contact person email 
 phoneNumber – account phone number 
 faxNumber – account fax number 
 notes – account notes 
 parentId – account parent identifier 

 Example: JSON output example: 
{ 

 
"accounts":{ 

 
"count":2638, 

 
"list":[{ 

 
"id":0, 

 
"name":" account 1", 

"location":{ 

"country":"my country", 

"state":null, 

"city":null, 

 44 



 
API Description 

 
"address":"my address 4", 

 
"address2":"my address 2", 

"zip":"00000" 

}, 
 

"companyWebSite":"", 

"contactPerson":"Saar", 

"email":"mail@mail.com", 

"phoneNumber":"+00000000", 

"faxNumber":"", 

"notes":" ", 

"parentId":32, 

"uris":null 

}, 
 

{ 
 

"id":1, 
 

"name":" account 2", 

"location":{ 

"country":"my country", 

"state":null, 

"city":null, 

"address":"my address 4", 

"address2":"my address 2", 

"zip":"00000" 

}, 
 

"companyWebSite":"", 

"contactPerson":"Saar", 

"email":"mail@mail.com", 

"phoneNumber":"+00000000", 

"faxNumber":"", 

"notes":" ", 

"parentId":32, 

"uris":null 

}, 
 

{ 
 

"id":2, 
 

"name":" account 3", 

"location":{ 

"country":"my country", 

"state":null, 

"city":null, 

"address":"my address 4", 

 45 



 
API Description 

 
"address2":"my address 2", 

"zip":"00000" 

}, 
 

"companyWebSite":"", 

"contactPerson":"Saar", 

"email":"mail@mail.com", 

"phoneNumber":"+00000000", 

"faxNumber":"", 

"notes":" ", 

"parentId":32, 

"uris":null 

}] 
 

} 
 
} 

 46 



 
API Description 

Meters API 

Get Meters Data 
Description: Returns for each meter on site its lifetime energy reading, metadata and the device to which it’s connected to. 
URL: /site/{siteId}/meters 
Example: https://monitoringapi.solaredge.com/site/2/meters?meters=Production,Consumption&startTime=2013-05- 
5%2011:00:00&endTime=2013-05-05%2013:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON, XML (default) 

 Request: The following parameters to be included in the request: 
 

Parameter Type Mandatory Description 
site number Yes Site identifier 
timeUnit String No Aggregation granularity, see Time Unit on page 53. 

Default: DAY. 
Allowed values are: QUARTER_OF_AN_HOUR, HOUR, DAY, WEEK, 
MONTH, YEAR 

startTime String Yes The power measured start time in yyyy-MM-DD hh:mm:ss format 
endTime String Yes The power measured end time in yyyy-MM-DD hh:mm:ss format 
meters String No Select specific meters only. If this value is omitted, all meter readings are 

returned. 
Value shall include entries from the following list separated by comma: 
 Production- AC production power meter / inverter production AC power 

(fallback) 
 Consumption - Consumption meter 
 FeedIn - Exported to grid meter 
 Purchased - Imported power from grid meter 

 
 Response: Response parameters include lifetime energy reading at the defined granularity within the specified date range, 

including the following parameters: 
 

Original name Comment Data divided per meter 
timeUnit Aggregation granularity no 
Unit Wh no 

meterSerialNumber  yes 
connectedSolaredgeDeviceSN Inverter to which the meter is connected to yes 
model Meter model yes 
meterType Production, Consumption, FeedIn or Purchased yes 
date Measurement timestamp yes 
value Lifetime energy reading yes 

 
 
 

Example - JSON output example: 
{ 

 
 

"meterEnergyDetails": { 
 
 

"timeUnit": "DAY", 

 47 



 
API Description 

 
"unit": "Wh", 

 
 

"meters": [ 
 
 

{ 
 
 

"meterSerialNumber": "12345678", 
 
 

"connectedSolaredgeDeviceSN": "7E212128-E8", 
 
 

"model": "RWNC-3Y-480-MB", 
 
 

"meterType": "Production", 
 
 

"values": [ 
 
 

{ 
 
 

"date": "2018-11-01 00:00:00", 
 
 

"value": 198 
 
 

}, 
 
 

{ 
 
 

"date": "2018-11-02 00:00:00", 
 
 

"value": 243 
 
 

}, 
 
 

{ 
 
 

"date": "2018-11-03 00:00:00", 
 
 

"value": 273 
 
 

}, 
 
 

{ 
 
 

"date": "2018-11-04 00:00:00", 
 

"value": 299 
 

}, 
 
 

{ 
 
 

"date": "2018-11-05 00:00:00", 

 48 



 
API Description 

"value": 309 
 

}, 
 
 

{ 
 

"date": "2018-11-06 00:00:00", 
 

"value": 312 
 

}, 
 
 

{ 
 

"date": "2018-11-07 00:00:00", 
 

"value": 344 
 

}, 
 
 

{ 
 

"date": "2018-11-08 00:00:00", 
 

"value": 415 
 

}, 
 
 

{ 
 

"date": "2018-11-09 00:00:00", 
 

"value": 451 
 

}, 
 
 

{ 
 

"date": "2018-11-10 00:00:00", 
 

"value": 552 
 

}, 
 
 

{ 
 

"date": "2018-11-11 00:00:00", 
 

"value": 572 
 

}, 

 49 



 
API Description 

 
{ 

 
"date": "2018-11-12 00:00:00", 

 

"value": 670 
 

} 
 

] 
 

}, 
 
 

{ 
 

"meterSerialNumber": "22233345", 
 
 

"connectedSolaredgeDeviceSN": "7E212121-E1", 
 
 

"model": "RWNC-3Y-480-MB", 
 
 

"meterType": "Production", 
 
 

"values": [ 
 
 

{ 
 
 

"date": "2018-11-01 00:00:00", 
 

"value": 121 
 

}, 
 
 

{ 
 
 

"date": "2018-11-02 00:00:00", 
 

"value": 153 
 

}, 
 
 

{ 
 
 

"date": "2018-11-03 00:00:00", 
 
 

"value": 255 
 
 

}, 
 
 

{ 
 
 

"date": "2018-11-04 00:00:00", 

 50 



 
API Description 

"value": 276 
 

}, 
 
 

{ 
 

"date": "2018-11-05 00:00:00", 
 

"value": 295 
 

}, 
 
 

{ 
 

"date": "2018-11-06 00:00:00", 
 

"value": 303 
 

}, 
 
 

{ 
 

"date": "2018-11-07 00:00:00", 
 

"value": 348 
 

}, 
 
 

{ 
 

"date": "2018-11-08 00:00:00", 
 

"value": 450 
 

}, 
 
 

{ 
 

"date": "2018-11-09 00:00:00", 
 

"value": 541 
 

}, 
 
 

{ 
 

"date": "2018-11-10 00:00:00", 
 

"value": 604 
 

}, 

 51 



 
API Description 

 
{ 

 
"date": "2018-11-11 00:00:00", 

 
 

"value": 817 
 

}, 
 
 

{ 
 

"date": "2018-11-12 00:00:00", 
 
 

"value": 975 
 

} 
 

] 
 

} 
 

] 
 

} 
 
} 

 52 



 
API Description 

Sensors API 

Get Sensor List 
Description: Returns a list of all the sensors in the site, and the device to which they are connected. 
URL: /equipment/{siteId}/sensors 
Example: https://monitoringapi.solaredge.com/equipment/2/sensors?api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON 

 Request: The following are parameters to include in the request: 
 Parameter Type Mandatory Description 
 siteId Integer Yes The site identifier 
 Re sponse: Returns the list of sensors installed in the site associated with the gateway they are connected with. Each entry 

will include the following parameters: 
 connectedTo: name of the gateway the sensor is connected to 
 name: the name of the sensor 
 measurement: what the sensor measures, e.g.: SensorGlobalHorizontalIrradiance, SensorDiffusedIrradiance, 

SensorAmbientTemperature 
 type: the sensor type e.g.: Temperature, Irradiance. 
 Example: JSON output example: 

{ 
 

"SiteSensors": { 

"count": 3, 

"list": [{ 
 

"connectedTo": "Gateway 19", 
 

"count": 2, 
 

"sensors": [{ 
 

"name": "Global horizontal irradiance", 

"measurement": "SensorGlobalHorizontalIrradiance", 

"type": "IRREDIANCE" 

}, 
 

{ 
 

"name": "Diffused irradiance", 

"measurement": "SensorDiffusedIrradiance", 

"type": "IRRADIANCE" 

}] 
 

}, 
 

{ 
 

"connectedTo": "Gateway 1", 
 

"count": 1, 
 

"sensors": [{ 
 

"name": "Ambient temperature", 

"measurement": "SensorAmbientTemperature", 

"type": "TEMPERATURE" 

 53 



 
API Description 

 
}] 

 
}] 

 
} 

 
} 

 
 
 

Get Sensor Data 
Description: Returns the data of all the sensors in the site, by the gateway they are connected to. 
URL: /site/{siteId}/sensors?{startDate}=<timestamp>&{endDate}=<timestamp> 
Example: https://monitoringapi.solaredge.com/site/2/sensors?startDate=2013-05-5%2011:00:00&endDate=2013-05- 
05%2013:00:00&api_key=L4QLVQ1LOKCQX2193VSEICXW61NP6B1O 
Method: GET 
Accepted formats: JSON 

 Usage limitation: This API is limited to one-week period. This means that the period between endDate and startDate should 
not exceed one week). If the period is longer, the system will generate error 403 with a description. 
 Request: The following are parameters to include in the request: 

 Parameter Type Mandatory Description 
 siteId Integer Yes The site identifier 
 startDate String Yes The start (date + time) to get sensor data 
 endDate String Yes The end (date + time) to get sensor data 
 Re sponse: Returns the telemetries reported by all sensors in the site, by the device they are connected to. Each entry will 

include the following parameters: 
 connectedTo: name of the gateway the sensor is connected to 
 count: the number of telemetries 
 date: timestamp of the telemetries 
 measurement: (e.g. ambientTemperature) and its numerical value (metric system) 
 Example: JSON output example: 

{ 
 

"siteSensors": { 

"data": [{ 

"connectedTo": "Gateway 19", 
 

"count": 0, 
 

"telemetries": [] 
 

}, 
 

{ 
 

"connectedTo": "Gateway 1", 
 

"count": 427, 
 

"telemetries": [{ 
 

"date": "2015-06-15 13:00:00", 
 

"ambientTemperature": -22.1155, 
 

"moduleTemperature": 47.2601, 
 

"windSpeed": 81.3652, 
 

…] 
 

}, 

 54 



 
API Description 

 
{ 

 
"connectedTo": "Gateway 3", 

 
"count": 427, 

 
"telemetries": [{ 

 
"date": "2015-06-15 13:00:00", 

 
… 

 
}, 

 
{ 

 
"connectedTo": "Gateway 4", 

 
"count": 0, 

 
"telemetries": [] 

 
}, 

 
{ 

 
"connectedTo": "Gateway 489", 

 
"count": 0, 

 
"telemetries": [] 

 
}, 

 
{ 

 
"connectedTo": "Gateway 488", 

 
"count": 427, 

 
"telemetries": [{ 

 
"date": "2015-06-15 13:00:00", 

 
… 

 
}] 

 
} 

 
} 

 55 



 
API Description 

API Versions 
As the monitoring API evolves over time, users of the monitoring API need to make sure their code is interacting with the 
formally supported version. 
The monitoring API supports previous versions to some extent. This can be verified by executing the Supported Version API (see 
below). 
The version format is <major.minor.release> where: 

 Major - The main version number. This number increases when the version includes significant changes, which might not be 
backward compatible with previous versions in terms of APIs calls and returned results. 
 Minor – The sub-version number. This number increases when the version includes some changes, which might not affect 

the APIs, however the returned results can contain more information than the previous minor version. 
 Release – bug fixes 

The user should optionally specify the version as a parameter for each API (except this API) e.g. version=1.0.0. If it is omitted, 
current version is assumed (see Current Version below). 

 

Current Version 
Description: Return the most updated version number in <major.minor.revision> format. 
URL: /version/current 
Example URL: https://monitoringapi.solaredge.com/version/current 
Method: GET 
Accepted formats: JSON and XML 
Method: GET 

 Request: No parameters 
 Response: The current version 
 Example: JSON output: 

{"version":"1.0.0"} 
 
Supported Version 
Description: Return a list of supported version numbers in <major.minor.revision> format. 
URL: /version/supported 
Example URL: https://monitoringapi.solaredge.com/version/current 
Method: GET 
Accepted formats: JSON and XML 
Method: GET 

 Request: No parameters 
 Response: A list of supported versions 
 Example: JSON output: 

{"supported":["0.9.5","1.0.0"]} 

 56 



 
Data Types 

Data Types 
Time Unit 
Allowed values: DAY, WEEK, MONTH and YEAR 

 
Site Status 

• Active – The site is active 
• Pending Communication – The site was created successfully however there is no communication yet from its 

inverters/SMI. 
 
Site Type 

• Optimizers and inverters 
• Safety and monitoring interface 
• Monitoring combiner boxes 

 57